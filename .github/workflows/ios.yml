name: iOS Starter Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Verify Xcode Project Exists
        run: |
          if [ -z "$(ls | grep -E '\.xcodeproj$|\.xcworkspace$')" ]; then
            echo "❌ No Xcode project or workspace found. Ensure you have a valid iOS project."
            exit 1
          fi

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json 2>/dev/null)
          if [ -z "$scheme_list" ]; then
            echo "❌ xcodebuild failed to list schemes. Check if the project exists."
            exit 1
          fi
          default=$(echo $scheme_list | ruby -r json -e 'puts JSON.parse(STDIN.read)["project"]["targets"][0] rescue ""')
          if [ -z "$default" ]; then
            echo "❌ Failed to extract the default scheme."
            exit 1
          fi
          echo $default > default
          echo "✅ Using default scheme: $default"
          echo "default=$default" >> $GITHUB_ENV

      - name: Build
        env:
          scheme: ${{ env.default }}
          platform: "iOS Simulator"
        run: |
          scheme=${{ env.default }}
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          file_to_build=$(ls -1 | grep -E '\.xcworkspace$|\.xcodeproj$' | head -1)
          if [ -z "$file_to_build" ]; then echo "❌ No valid Xcode project/workspace found"; exit 1; fi
          filetype_parameter=$(echo "$file_to_build" | grep -q '\.xcworkspace$' && echo "workspace" || echo "project")
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

      - name: Test
        env:
          scheme: ${{ env.default }}
          platform: "iOS Simulator"
        run: |
          scheme=${{ env.default }}
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          file_to_build=$(ls -1 | grep -E '\.xcworkspace$|\.xcodeproj$' | head -1)
          filetype_parameter=$(echo "$file_to_build" | grep -q '\.xcworkspace$' && echo "workspace" || echo "project")
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

